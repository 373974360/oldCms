<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" 
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="dept">	
	<!-- 得所有部门信息列表 -->	
	<select id="getAllDeptList" resultType="com.deya.wcm.bean.org.dept.DeptBean">
		select * from cs_org_dept where is_delete = 0 order by parent_id,dept_sort
	</select>
	
	<!-- 得所有部门信息列表 -->
	<select id="getChildDeptListForBD" parameterType="Map" resultType="com.deya.wcm.bean.org.dept.DeptBean">
		select * from cs_org_dept where is_delete = 0 and parent_id = #{dept_id}
		<if test="con_value != null">
			and ${con_name} like '%${con_value}%'
		</if>
		order by parent_id,dept_sort
	</select>
		
	<!-- 根据ID返回部门对象 -->	
	<select id="getDeptBeanByID" parameterType="java.lang.String" resultType="com.deya.wcm.bean.org.dept.DeptBean">
	 	select * from cs_org_dept where dept_id = #{dept_id}
	</select>
	
	<!-- 插入部门信息 -->	
	<insert id="insert_dept" parameterType="com.deya.wcm.bean.org.dept.DeptBean">
	 	insert into cs_org_dept(dept_id,parent_id,dept_fullname,dept_name,tree_position,deptlevel_value,area_code,dept_code,functions,tel,fax,email,address,dept_memo,dept_sort)
		values(#{dept_id,,jdbcType=INTEGER},#{parent_id,,jdbcType=INTEGER},#{dept_fullname,,jdbcType=VARCHAR},#{dept_name,,jdbcType=VARCHAR},
		#{tree_position,,jdbcType=VARCHAR},#{deptlevel_value,,jdbcType=INTEGER},#{area_code,,jdbcType=VARCHAR},#{dept_code,,jdbcType=VARCHAR},
		#{functions,,jdbcType=VARCHAR},#{tel,,jdbcType=VARCHAR},#{fax,,jdbcType=VARCHAR},#{email,,jdbcType=VARCHAR},#{address,,jdbcType=VARCHAR},
		#{dept_memo,,jdbcType=VARCHAR},#{dept_sort,,jdbcType=INTEGER})
	</insert>
	
	<!-- 修改部门信息 -->	
	<update id="update_dept" parameterType="com.deya.wcm.bean.org.dept.DeptBean">
	 	update cs_org_dept set dept_fullname = #{dept_fullname},dept_name = #{dept_name},deptlevel_value = #{deptlevel_value},
	 	area_code = #{area_code},dept_code = #{dept_code},functions = #{functions},tel = #{tel},fax = #{fax},email = #{email},address = #{address},dept_memo = #{dept_memo}		
		where dept_id = #{dept_id}
	</update>
	
	<!-- 移动部门 -->	
	<update id="move_table" parameterType="Map">
		update cs_org_dept set parent_id = #{parent_id},tree_position=#{tree_position} where dept_id = #{dept_id}
	</update>
	
	<!-- 删除部门信息 -->	
	<update id="delete_dept" parameterType="Map">
	   update cs_org_dept set is_delete = '-1' where dept_id in (${ids})
	</update>
	
	<!-- 保存部门排序 -->	
	<update id="savesort_dept" parameterType="Map">
	   update cs_org_dept set dept_sort = #{dept_sort} where dept_id = #{dept_id}
	</update>
	
	<!-- *******************************部门管理员处理 开始******************************* -->
	<!-- 得所有部门管理员信息列表 -->	
	<select id="getAllDeptManagerList" resultType="com.deya.wcm.bean.org.dept.DeptManBean">
		select * from cs_org_dept_manager order by dept_id
	</select>
	
	<!-- 插入部门管理员 -->
	<insert id="insert_detp_manager" parameterType="Map">
	   insert into cs_org_dept_manager(dept_manager_id,dept_id,user_id)
	   values(#{dept_manager_id},#{dept_id},#{user_id})
	</insert>
	
	<!-- 根据部门ID删除部门管理 -->
	<delete id="delete_detp_manager_byDeptID" parameterType="Map">
	   delete from cs_org_dept_manager  where dept_id in (${detp_ids})
	   <if test="user_ids != null">
	   	and user_id in (${user_ids})
	   </if>
	</delete>
	
	<!-- 根据人员ID删除部门管理 -->
	<delete id="delete_detp_manager_byUserID" parameterType="Map">
	   delete from cs_org_dept_manager  where user in (${ids})
	</delete>
	<!-- *******************************部门管理员处理 结束******************************* -->
	
	<!-- *******************************部门级别处理 开始******************************* -->
	<!-- 得所有部门级别信息列表 -->
	<select id="getAllDeptLevelList" resultType="com.deya.wcm.bean.org.dept.DeptLevelBean">
		select * from cs_org_deptlevel where is_delete = 0 order by deptlevel_value
	</select>	
	
	<!-- 根据ID返回部门级别对象 -->	
	<select id="getDeptLevelBeanByID" parameterType="java.lang.String" resultType="com.deya.wcm.bean.org.dept.DeptLevelBean">
	 	select * from cs_org_deptlevel where deptlevel_id = #{deptlevel_id}
	</select>
	
	<!-- 插入部门级别信息 -->	
	<insert id="insert_deptLevel" parameterType="com.deya.wcm.bean.org.dept.DeptLevelBean">
	 	insert into cs_org_deptlevel(deptlevel_id,deptlevel_value,deptlevel_name,deptlevel_memo)
		values(#{deptlevel_id},#{deptlevel_value},#{deptlevel_name},#{deptlevel_memo})
	</insert>
	
	<!-- 修改部门级别信息 -->	
	<update id="update_deptLevel" parameterType="com.deya.wcm.bean.org.dept.DeptLevelBean">
	 	update cs_org_deptlevel set deptlevel_value = #{deptlevel_value},deptlevel_name = #{deptlevel_name},deptlevel_memo = #{deptlevel_memo} where deptlevel_id = #{deptlevel_id}
	</update>
	
	<!-- 删除部门级别信息 -->
	<update id="delete_deptLevel" parameterType="Map">
	   update cs_org_deptlevel set is_delete = '-1' where deptlevel_id in (${ids})
	</update>
	<!-- *******************************部门级别处理 结束******************************* -->


    <!--********************************同步银海组织机构sql开始**********************************************-->


    <!-- 插入部门 -->
    <!--<insert id="insertDeptBatch" parameterType="List">
        insert into cs_org_dept(dept_id,parent_id,dept_fullname,dept_name,tree_position,deptlevel_value,
        area_code,dept_code,functions,tel,fax,email,address,dept_memo,dept_sort) values
        <foreach collection ="list" item ="item" index ="index" separator =",">
            (#{item.dept_id,,jdbcType=INTEGER},#{item.parent_id,,jdbcType=INTEGER},#{item.dept_fullname,,jdbcType=VARCHAR},#{item.dept_name,,jdbcType=VARCHAR},
            #{item.tree_position,,jdbcType=VARCHAR},#{item.deptlevel_value,,jdbcType=INTEGER},#{item.area_code,,jdbcType=VARCHAR},#{item.dept_code,,jdbcType=VARCHAR},
            #{item.functions,,jdbcType=VARCHAR},#{item.tel,,jdbcType=VARCHAR},#{item.fax,,jdbcType=VARCHAR},#{item.email,,jdbcType=VARCHAR},#{item.address,,jdbcType=VARCHAR},
            #{item.dept_memo,,jdbcType=VARCHAR},#{item.dept_sort,,jdbcType=INTEGER})
        </foreach>
    </insert>-->

	<insert id="insertDeptBatch" parameterType="java.util.List">
		insert into cs_org_dept(dept_id,parent_id,dept_fullname,dept_name,tree_position,deptlevel_value,
		area_code,dept_code,functions,tel,fax,email,address,dept_memo,dept_sort)
		<foreach collection="list" item="item" index="index" separator="union all" >
			(select
			#{item.dept_id,,jdbcType=INTEGER},#{item.parent_id,,jdbcType=INTEGER},#{item.dept_fullname,,jdbcType=VARCHAR},#{item.dept_name,,jdbcType=VARCHAR},
			#{item.tree_position,,jdbcType=VARCHAR},#{item.deptlevel_value,,jdbcType=INTEGER},#{item.area_code,,jdbcType=VARCHAR},#{item.dept_code,,jdbcType=VARCHAR},
			#{item.functions,,jdbcType=VARCHAR},#{item.tel,,jdbcType=VARCHAR},#{item.fax,,jdbcType=VARCHAR},#{item.email,,jdbcType=VARCHAR},#{item.address,,jdbcType=VARCHAR},
			#{item.dept_memo,,jdbcType=VARCHAR},#{item.dept_sort,,jdbcType=INTEGER}
			from dual)
		</foreach>
	</insert>


	<!--<insert id="insertDeptBatch" parameterType="List">
		insert into cs_org_dept(dept_id,parent_id,dept_name,tree_position
		area_code,dept_code,address) values
		<foreach collection ="list" item ="item" index ="index" separator =",">
			(#{item.dept_id,,jdbcType=INTEGER},#{item.parent_id,,jdbcType=INTEGER},#{item.dept_name,,jdbcType=VARCHAR},
			#{item.tree_position,,jdbcType=VARCHAR},#{item.area_code,,jdbcType=VARCHAR},#{item.dept_code,,jdbcType=VARCHAR},
			#{item.address,,jdbcType=VARCHAR})
		</foreach>
	</insert>-->

    <delete id="deleteDept">
        delete from cs_org_dept
    </delete>

	<select id="selectMaxDeptId" resultType="java.lang.String">
		select max(dept_id) from cs_org_dept
	</select>

    <!--********************************同步银海组织机构sql结束**********************************************-->

</mapper>