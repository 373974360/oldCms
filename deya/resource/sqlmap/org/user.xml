<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" 
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="user">	
	<!-- 得到所有人员信息列表 -->	
	<select id="getAllUserList" resultType="com.deya.wcm.bean.org.user.UserBean">
	 select * from cs_org_user where user_status != -1 order by user_id desc
	</select>
	
	<select id="getUserCountByDeptIDForDB" resultType="java.lang.String">
	 select count(user_id) from cs_org_user where user_status != -1 and dept_id = #{dept_id} and ${con_name} like '%${con_value}%'
	</select>
	
	<!-- 得到人员对象 -->
	<select id="getUserBeanByID" resultType="com.deya.wcm.bean.org.user.UserBean" parameterType="java.lang.String">
	select * from cs_org_user where user_id = #{user_id} and user_status != -1
	</select>
	
	<!-- 插入人员 -->
	<insert id="insert_user" parameterType="com.deya.wcm.bean.org.user.UserBean">
	insert into cs_org_user(user_id,dept_id,userlevel_value,user_realname,user_aliasname,user_photo,sex,birthday,
	nation,age,is_marriage,natives,functions,degree,colleges,graduation_time,professional,health,tel,phone,email,
	address,postcode,idcard,user_status,resume,user_memo)
	values(#{user_id,,jdbcType=INTEGER},#{dept_id,,jdbcType=INTEGER},#{userlevel_value,,jdbcType=INTEGER},#{user_realname,,jdbcType=VARCHAR},
	#{user_aliasname,,jdbcType=VARCHAR},#{user_photo,,jdbcType=VARCHAR},#{sex,,jdbcType=INTEGER},#{birthday,,jdbcType=VARCHAR},
	#{nation,,jdbcType=VARCHAR},#{age,,jdbcType=INTEGER},#{is_marriage,,jdbcType=INTEGER},#{natives,,jdbcType=VARCHAR},#{functions,,jdbcType=VARCHAR},
	#{degree,,jdbcType=VARCHAR},#{colleges,,jdbcType=VARCHAR},#{graduation_time,,jdbcType=VARCHAR},#{professional,,jdbcType=VARCHAR},
	#{health,,jdbcType=VARCHAR},#{tel,,jdbcType=VARCHAR},#{phone,,jdbcType=VARCHAR},#{email,,jdbcType=VARCHAR},#{address,,jdbcType=VARCHAR},
	#{postcode,,jdbcType=VARCHAR},#{idcard,,jdbcType=VARCHAR},#{user_status,,jdbcType=INTEGER},#{resume,,jdbcType=VARCHAR},#{user_memo,,jdbcType=VARCHAR})
	</insert>
	
	<!-- 修改人员 -->
	<update id="update_user" parameterType="com.deya.wcm.bean.org.user.UserBean">
	 update cs_org_user set userlevel_value = #{userlevel_value},user_realname = #{user_realname},user_aliasname = #{user_aliasname},user_photo = #{user_photo},sex = #{sex},birthday = #{birthday},nation = #{nation},age = #{age},is_marriage = #{is_marriage},natives = #{natives},functions = #{functions},degree = #{degree},colleges = #{colleges},graduation_time = #{graduation_time},professional = #{professional},health = #{health},tel = #{tel},phone = #{phone},email = #{email},address = #{address},postcode = #{postcode},idcard = #{idcard},user_status = #{user_status},resume = #{resume},user_memo = #{user_memo} where user_id = #{user_id}
	</update>
	
	<!-- 删除人员 -->
	<update id="delete_user" parameterType="Map">
	 update cs_org_user set user_status = '-1' where user_id in (${ids})
	</update>
	
	<!-- 根据部门删除人员信息 -->
	<update id="delete_userByDeptID" parameterType="Map">
	 update cs_org_user set user_status = '-1' where dept_id in (${ids})
	</update>
	
	<!-- 修改人员状态 -->
	<update id="update_userStatus" parameterType="Map">
	 update cs_org_user set user_status = #{user_status} where user_id in (${ids})
	</update>
	
	<!-- 修改用户部门 -->
	<update id="move_user" parameterType="Map">
	update cs_org_user set dept_id = #{dept_id} where user_id in (${user_ids})
	</update>
	
	<!-- *******************************人员级别处理 开始******************************* -->
	<!-- 得到所有人员级别列表 -->	
	<select id="getAllUserLevelList" resultType="com.deya.wcm.bean.org.user.UserLevelBean">
	 select * from cs_org_userlevel where is_delete = 0
	</select>
	
	<!-- 得到人员级别 -->
	<select id="getUserLevelBean" resultType="com.deya.wcm.bean.org.user.UserLevelBean" parameterType="java.lang.String">
	select * from cs_org_userlevel where userlevel_id = #{userlevel_id}
	</select>
	
	<!-- 插入人员级别 -->
	<insert id="insert_userLevel" parameterType="com.deya.wcm.bean.org.user.UserLevelBean">
	insert into cs_org_userlevel(userlevel_id,userlevel_name,userlevel_value,userlevel_memo)
	values(#{userlevel_id},#{userlevel_name},#{userlevel_value},#{userlevel_memo})
	</insert>
	
	<!-- 修改人员级别 -->
	<update id="update_userLevel" parameterType="com.deya.wcm.bean.org.user.UserLevelBean">
	update cs_org_userlevel set userlevel_name = #{userlevel_name},userlevel_value = #{userlevel_value},userlevel_memo = #{userlevel_memo} where userlevel_id = #{userlevel_id}
	</update>	
	
	<!-- 删除人员级别 -->
	<update id="delete_userLevel" parameterType="Map">
	 update cs_org_userlevel set is_delete = '-1' where userlevel_id in (${ids})
	</update>
	<!-- *******************************人员级别处理 结束******************************* -->
	
	<!-- *******************************帐号处理 开始******************************* -->
	<!-- 得到所有帐号列表 -->
	<select id="getAllUserRegister" resultType="com.deya.wcm.bean.org.user.UserRegisterBean">
	 select * from cs_org_register order by user_id,register_id
	</select>
	
	<!-- 得到帐号列表总数 -->
	<select id="getUserRegisterCount" parameterType="Map" resultType="java.lang.String">
	  
	 	<!-- 通过“部门”检索时执行的SQL段 -->
	 	<if test="con_deptname != null">
	 		select count(register_id) from cs_org_register where user_id in 
	 		( 
				select u.user_id from cs_org_user u where u.dept_id in 
				( 
					select d.dept_id from cs_org_dept d where 
					d.dept_name like '%${con_value}%'
				)
			) 
	 	</if>
	 	
	 	<!-- 通过“帐号”检索时执行的SQL段 -->
	 	<if test="con_registerid != null">
	     	select count(register_id) from cs_org_register where register_id in (select register_id from cs_org_register where 1=1
			<if test="con_value != null">
				and ${con_name} like '${con_value}'
			</if>
	       	)
		</if>
		
		<!-- 通过”真实姓名“检索时执行的SQL段 -->
		<if test="con_realname!=null">
			select count(register_id) from cs_org_register where user_id in (select user_id from cs_org_user where 1=1
			<if test="con_value != null">
				and user_realname like '%${con_value}%'
			</if>
	       	)
		</if>
		
		<if test="register_status != null">
					and register_status = ${register_status}
		</if>
	
	</select>
	
	<!-- 根据帐号名得到帐号对象 -->
	<select id="getUserRegisterBeanByUname" resultType="com.deya.wcm.bean.org.user.UserRegisterBean" parameterType="java.lang.String">
	 select * from cs_org_register where username = #{username}
	</select>
	
	<!-- 插入帐号 -->
	<insert id="insert_register" parameterType="com.deya.wcm.bean.org.user.UserRegisterBean">
	 insert into cs_org_register(register_id,user_id,username,password,register_status)
	 values(#{register_id,,jdbcType=INTEGER},#{user_id,,jdbcType=INTEGER},#{username,,jdbcType=VARCHAR},#{password,,jdbcType=VARCHAR},#{register_status,,jdbcType=INTEGER})
	</insert>
	
	<!-- 修改帐号 -->
	<update id="update_register" parameterType="com.deya.wcm.bean.org.user.UserRegisterBean">
	 update cs_org_register set password = #{password},username = #{username} ,register_status = #{register_status} where register_id = #{register_id}	 
	</update>
	
	<!-- 修改帐号状态 -->
	<update id="update_registerStatus" parameterType="Map">
	 update cs_org_register set register_status = #{register_status} where register_id in (${ids})
	</update>
	
	<!-- 根据人员ID批量修改人员密码 -->
	<update id="update_passwordByUserID" parameterType="com.deya.wcm.bean.org.user.UserRegisterBean">
	 update cs_org_register set password = #{password} where user_id = #{user_id}	 
	</update>
	
	<!-- 删除帐号 -->
	<delete id="delete_registerByRID" parameterType="Map">
	 delete from cs_org_register where register_id in (${ids})
	</delete>
	
	<!-- 根据人员ID删除帐号 -->
	<delete id="delete_registerByUserID" parameterType="Map">
	 delete from cs_org_register where user_id in (${user_ids})
	</delete>
	
	<!-- 根据部门ID删除帐号 -->
	<delete id="delete_registerByDeptID" parameterType="Map">
	 delete from cs_org_register where user_id in (select user_id from cs_org_user where dept_id in (${dept_ids}))
	</delete>
	<!-- *******************************帐号处理 结束******************************* -->
	
	<!-- *******************************需替换sql 开始******************************* -->
	<!-- 根据条件查询人员信息 -->
	<sql id="getAllUserListByDeptID_sql_conn">
		where user_status != -1 and dept_id = ${dept_id}	 	
            <if test="con_value != null">
				and ${con_name} like '%${con_value}%'
			</if>
	</sql>
	<select id="getAllUserListByDeptID" parameterType="Map" resultType="com.deya.wcm.bean.org.user.UserBean">	 
	select * from (
	       select row_.*, rownum rownum_ from (       
	            select * from cs_org_user <include refid="getAllUserListByDeptID_sql_conn"/> 	
	            order by ${sort_name} ${sort_type}
	<![CDATA[
	        ) row_ where rownum <=#{page_size,,jdbcType=INTEGER}+#{start_num,,jdbcType=INTEGER}       
    	) where rownum_ >=#{start_num,,jdbcType=INTEGER} + 1
    ]]>	
	</select>
	<select id="getAllUserListByDeptID_mysql" parameterType="Map" resultType="com.deya.wcm.bean.org.user.UserBean">
			select * from cs_org_user <include refid="getAllUserListByDeptID_sql_conn"/> 	
	            order by ${sort_name} ${sort_type} limit #{start_num,,jdbcType=INTEGER},#{page_size,,jdbcType=INTEGER}
	</select>
	<select id="getAllUserListByDeptID_mssql" parameterType="Map" resultType="com.deya.wcm.bean.org.user.UserBean">
		select top ${page_size} * 
			  from cs_org_user 
			  <include refid="getAllUserListByDeptID_sql_conn"/>
				and user_id not in
				  (select top ${start_num} user_id
					 from cs_org_user	<include refid="getAllUserListByDeptID_sql_conn"/> 
					 order by ${sort_name} ${sort_type}  )
			order by ${sort_name} ${sort_type}	
	</select>
	<!-- 根据条件查询帐号信息 -->
	<select id="getAllUserRegisterForDB" parameterType="Map" resultType="com.deya.wcm.bean.org.user.UserRegisterBean" >	 
	 <![CDATA[  
	select * from (
	       select row_.*, rownum rownum_ from (   
	 ]]>    
	 
	 	<!-- 通过“部门”检索时执行的SQL段 -->
	 	<if test="con_deptname != null">
	 		select * from cs_org_register where user_id in 
	 		( 
				select u.user_id from cs_org_user u where u.dept_id in 
				( 
					select d.dept_id from cs_org_dept d where 
					d.dept_name like '%${con_value}%'
				)
			) 
	 	</if>
	 	
	 	<!-- 通过“帐号”检索时执行的SQL段 -->
	 	<if test="con_registerid != null">
	     	select * from cs_org_register where register_id in (select register_id from cs_org_register where 1=1
			<if test="con_value != null">
				and ${con_name} like '${con_value}'
			</if>
	       	)
		</if>
		
		<!-- 通过”真实姓名“索检索时执行的SQL段 -->
		<if test="con_realname!=null">
			select * from cs_org_register where user_id in (select user_id from cs_org_user where 1=1
			<if test="con_value != null">
				and user_realname like '%${con_value}%'
			</if>
	       	)
		</if>
		
		<if test="register_status != null">
					and register_status = ${register_status}
		</if>
	<![CDATA[
	        order by user_id,register_id
	        ) row_ where rownum <=#{page_size,,jdbcType=INTEGER}+#{start_num,,jdbcType=INTEGER}       
    	) where rownum_ >=#{start_num,,jdbcType=INTEGER} + 1
    ]]>	
	</select>
	
	<select id="getAllUserRegisterForDB_mysql" parameterType="Map" resultType="com.deya.wcm.bean.org.user.UserRegisterBean" >		 
	 	<!-- 通过“部门”检索时执行的SQL段 -->
	 	<if test="con_deptname != null">
	 		select * from cs_org_register where user_id in 
	 		( 
				select u.user_id from cs_org_user u where u.dept_id in 
				( 
					select d.dept_id from cs_org_dept d where 
					d.dept_name like '%${con_value}%'
				)
			) 
	 	</if>
	 	
	 	<!-- 通过“帐号”检索时执行的SQL段 -->
	 	<if test="con_registerid != null">
	     	select * from cs_org_register where register_id in (select register_id from cs_org_register where 1=1
			<if test="con_value != null">
				and ${con_name} like '${con_value}'
			</if>
	       	)
		</if>
		
		<!-- 通过”真实姓名“索检索时执行的SQL段 -->
		<if test="con_realname!=null">
			select * from cs_org_register where user_id in (select user_id from cs_org_user where 1=1
			<if test="con_value != null">
				and user_realname like '%${con_value}%'
			</if>
	       	)
		</if>		
		<if test="register_status != null">
					and register_status = ${register_status}
		</if>
		order by user_id,register_id limit #{start_num,,jdbcType=INTEGER},#{page_size,,jdbcType=INTEGER}
	</select>
	<!-- *******************************需替换sql 结束******************************* -->














    <!--********************************同步银海组织机构sql开始**********************************************-->

    <!-- 插入人员 -->
    <!--<insert id="insertUserBatch" parameterType="List">
        insert into cs_org_user(user_id,dept_id,userlevel_value,user_realname,user_aliasname,user_photo,sex,birthday,
        nation,age,is_marriage,natives,functions,degree,colleges,graduation_time,professional,health,tel,phone,email,
        address,postcode,idcard,user_status,resume,user_memo) values
        <foreach collection ="list" item ="item" index ="index" separator =",">
            (#{item.user_id,,jdbcType=INTEGER},#{item.dept_id,,jdbcType=INTEGER},#{item.userlevel_value,,jdbcType=INTEGER},#{item.user_realname,,jdbcType=VARCHAR},
            #{item.user_aliasname,,jdbcType=VARCHAR},#{item.user_photo,,jdbcType=VARCHAR},#{item.sex,,jdbcType=INTEGER},#{item.birthday,,jdbcType=VARCHAR},
            #{item.nation,,jdbcType=VARCHAR},#{item.age,,jdbcType=INTEGER},#{item.is_marriage,,jdbcType=INTEGER},#{item.natives,,jdbcType=VARCHAR},#{item.functions,,jdbcType=VARCHAR},
            #{item.degree,,jdbcType=VARCHAR},#{item.colleges,,jdbcType=VARCHAR},#{item.graduation_time,,jdbcType=VARCHAR},#{item.professional,,jdbcType=VARCHAR},
            #{item.health,,jdbcType=VARCHAR},#{item.tel,,jdbcType=VARCHAR},#{item.phone,,jdbcType=VARCHAR},#{item.email,,jdbcType=VARCHAR},#{item.address,,jdbcType=VARCHAR},
            #{item.postcode,,jdbcType=VARCHAR},#{item.idcard,,jdbcType=VARCHAR},#{item.user_status,,jdbcType=INTEGER},#{item.resume,,jdbcType=VARCHAR},#{item.user_memo,,jdbcType=VARCHAR})
        </foreach>
    </insert>-->
	<insert id="insertUserBatch" parameterType="List">
		insert into cs_org_user(user_id,dept_id,userlevel_value,user_realname,user_aliasname,user_photo,sex,birthday,
		nation,age,is_marriage,natives,functions,degree,colleges,graduation_time,professional,health,tel,phone,email,
		address,postcode,idcard,user_status,resume,user_memo)
		<foreach collection ="list" item ="item" index ="index" separator ="union all">
			(select
			#{item.user_id,,jdbcType=INTEGER},#{item.dept_id,,jdbcType=INTEGER},#{item.userlevel_value,,jdbcType=INTEGER},#{item.user_realname,,jdbcType=VARCHAR},
			#{item.user_aliasname,,jdbcType=VARCHAR},#{item.user_photo,,jdbcType=VARCHAR},#{item.sex,,jdbcType=INTEGER},#{item.birthday,,jdbcType=VARCHAR},
			#{item.nation,,jdbcType=VARCHAR},#{item.age,,jdbcType=INTEGER},#{item.is_marriage,,jdbcType=INTEGER},#{item.natives,,jdbcType=VARCHAR},#{item.functions,,jdbcType=VARCHAR},
			#{item.degree,,jdbcType=VARCHAR},#{item.colleges,,jdbcType=VARCHAR},#{item.graduation_time,,jdbcType=VARCHAR},#{item.professional,,jdbcType=VARCHAR},
			#{item.health,,jdbcType=VARCHAR},#{item.tel,,jdbcType=VARCHAR},#{item.phone,,jdbcType=VARCHAR},#{item.email,,jdbcType=VARCHAR},#{item.address,,jdbcType=VARCHAR},
			#{item.postcode,,jdbcType=VARCHAR},#{item.idcard,,jdbcType=VARCHAR},#{item.user_status,,jdbcType=INTEGER},#{item.resume,,jdbcType=VARCHAR},#{item.user_memo,,jdbcType=VARCHAR}
			 from dual)
		</foreach>
	</insert>
	<!--<insert id="insertUserBatch" parameterType="List">
		insert into cs_org_user(user_id,dept_id,user_realname,sex) values
		<foreach collection ="list" item ="item" index ="index" separator =",">
			(#{item.user_id,,jdbcType=INTEGER},#{item.dept_id,,jdbcType=INTEGER},#{item.user_realname,,jdbcType=VARCHAR},#{item.sex,,jdbcType=INTEGER})
		</foreach>
	</insert>-->

    <delete id="deleteUser">
        delete from cs_org_user
    </delete>

    <!-- 插入帐号密码人员 -->


    <insert id="insertUserRegisterBatch" parameterType="List">
        insert into cs_org_register(register_id,user_id,username,password,register_status)
        <foreach collection ="list" item ="item" index ="index" separator ="union all">
			(select
            #{item.register_id,,jdbcType=INTEGER},#{item.user_id,,jdbcType=INTEGER},#{item.username,,jdbcType=VARCHAR},
            #{item.password,,jdbcType=VARCHAR},#{item.register_status,,jdbcType=INTEGER}
			from dual)
        </foreach >
    </insert>

    <delete id="deleteRegisterUser">
        delete from cs_org_register
    </delete>


    <!--********************************同步银海组织机构sql结束**********************************************-->
	
</mapper>