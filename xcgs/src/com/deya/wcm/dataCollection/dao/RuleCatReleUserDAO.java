package com.deya.wcm.dataCollection.dao;import com.deya.wcm.bean.logs.SettingLogsBean;import com.deya.wcm.dao.PublicTableDAO;import com.deya.wcm.dataCollection.bean.RuleCatReleUser;import com.deya.wcm.db.DBManager;import java.util.HashMap;import java.util.List;import java.util.Map;/** * 采集规则分类与人员关联数据处理类. * <p/> * <p>Title: CicroDate</p> * <p/> * <p>Description: 采集规则分类与人员关联数据处理类</p> * <p/> * <p>Copyright: Copyright (c) 2010</p> * <p/> * <p>Company: Cicro</p> * * @author zhuliang * @version 1.0 *          <p/> *          * */public class RuleCatReleUserDAO {    @SuppressWarnings("unchecked")    public static List<RuleCatReleUser> getRuleReleUserList()    {        return DBManager.queryFList("getRuleReleUserList", "");    }    /**     * 插入采集规则分类与人员的关联(以分类为主)     *     * @param int             rcat_id     * @param String          usre_ids     * @param String          group_ids     * @param String          app_id     * @param String          site_id     * @param SettingLogsBean stl     * @return boolean     */    public static boolean insertRuleReleUserByCat(int rcat_id, String usre_ids, String group_ids, String app_id, String site_id, SettingLogsBean stl)    {        if (deleteRRUByCat(rcat_id + "", site_id))        {            try {                System.out.println("dao--------usre_ids--------" + usre_ids);                if (usre_ids != null && !"".equals(usre_ids))                {                    String[] userArr = usre_ids.split(",");                    insertRRUByCatHandl(rcat_id, userArr, 0, app_id, site_id);                }                if (group_ids != null && !"".equals(group_ids))                {                    String[] groupArr = group_ids.split(",");                    insertRRUByCatHandl(rcat_id, groupArr, 1, app_id, site_id);                }                PublicTableDAO.insertSettingLogs("添加", "采集规则分类与用户关联，采集规则分类", rcat_id + "", stl);                return true;            } catch (Exception e)            {                e.printStackTrace();                return false;            }        }        return false;    }    /**     * 插入采集规则分类与人员的关联入库方法(以分类为主)     *     * @param int      rcat_id     * @param String[] tempA 用户或用户组ID数组     * @param int      priv_type 0 用户 1用户组     * @param String   app_id     * @param String   site_id     * @return boolean     */    public static boolean insertRRUByCatHandl(int rcat_id, String[] tempA, int priv_type, String app_id, String site_id)    {        try {            for (int i = 0; i < tempA.length; i++)            {                RuleCatReleUser rru = new RuleCatReleUser();                rru.setId(PublicTableDAO.getIDByTableName("cs_rcat_priv"));                rru.setRcat_id(rcat_id);                rru.setPriv_type(priv_type);                rru.setSite_id(site_id);                rru.setApp_id(app_id);                rru.setPrv_id(Integer.parseInt(tempA[i]));                DBManager.insert("insert_rule_user", rru);            }            return true;        } catch (Exception e)        {            e.printStackTrace();            return false;        }    }    /**     * 根据采集规则分类ID删除关联信息     *     * @param String rcat_id     * @return boolean     */    public static boolean deleteRRUByCat(String rcat_id, String site_id)    {        Map<String, String> m = new HashMap<String, String>();        m.put("rcat_id", rcat_id);        m.put("site_id", site_id);        return DBManager.delete("delete_rule_user_byCat", m);    }}